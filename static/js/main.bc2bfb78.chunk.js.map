{"version":3,"sources":["components/hoc/withChildRender.js","posts-store-service-context/posts-store-service-context.js","components/hoc/withPostsStoreService.js","utils/compose.js","actions/index.js","actions/const.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/spinner/index.js","components/spinner/spinner.js","components/item-list/index.js","components/item-list/item-list.js","components/post-components/post-list.js","container/post-list-container/index.js","container/post-list-container/post-list-container.js","components/post-item/index.js","components/post-item/post-item.js","container/post-item-container/index.js","container/post-item-container/post-item-container.js","components/pages/main.js","components/pages/post.js","components/post-form/index.js","components/post-form/post-form.js","components/pages/add-post.js","components/post-header/index.js","components/post-header/post-header.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/posts-store.js","redusers/post-list.js","redusers/index.js","store.js","index.js"],"names":["render","React","createContext","PostsStoreProvider","Provider","PostsStoreConsumer","Consumer","withPostsStoreService","Wrapped","props","postsStoreService","compose","funcs","comp","reduceRight","wrapped","f","postsLoaded","newPosts","type","payload","postsError","error","fetchPosts","dispatch","getPosts","then","data","catch","ErrorIndicator","Spinner","ItemList","renderLabel","children","items","map","item","label","className","key","id","PostList","title","author","date","to","PostListContainer","connect","postList","posts","loading","useEffect","console","log","PostItem","post","content","document","dangerouslySetInnerHTML","__html","replace","PostItemContainer","find","Main","Post","match","params","PostForm","fetchAddPost","postAddPost","nowDate","Date","toDateString","useState","setTitle","setAuthor","EditorState","createEmpty","editor","setEditor","isAllert","setAllert","onChange","e","value","currentTarget","_targetInst","pendingProps","Allert","onClick","role","onSubmit","preventDefault","draftToHtml","convertToRaw","getCurrentContent","htmlFor","placeholder","required","editorState","wrapperClassName","editorClassName","onEditorStateChange","AddPost","PostHeader","App","path","component","exact","ErrorBoundry","state","hasError","this","setState","Component","Promise","resolve","setTimeout","newData","Math","floor","random","push","updatePostlist","action","undefined","reducer","store","createStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.bc2bfb78.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const withChildRender = (render) => (Wrapped) => {\r\n  return (props) => {\r\n      return (\r\n          <Wrapped {...props}>\r\n              {render}\r\n          </Wrapped>\r\n      );\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nexport const {\r\n  Provider: PostsStoreProvider,\r\n  Consumer: PostsStoreConsumer\r\n} = React.createContext()","import React from 'react'\r\nimport { PostsStoreConsumer } from '../../posts-store-service-context';\r\n\r\nexport const withPostsStoreService = () => (Wrapped) => {\r\n  return (props) => {\r\n    return (\r\n      <PostsStoreConsumer>\r\n        {\r\n          postsStoreService => <Wrapped\r\n                                  {...props}\r\n                                  postsStoreService={postsStoreService}\r\n                                />\r\n        }\r\n      </PostsStoreConsumer>\r\n    );\r\n  };\r\n\r\n};","const compose = (...funcs) => (comp) => {\r\n  return funcs.reduceRight( (wrapped, f) => f(wrapped), comp );\r\n}\r\n\r\nexport default compose;","import * as type from './const';\r\n\r\nconst postsLoaded = (newPosts) => {\r\n  return {\r\n    type: type.FETCH_POSTS_SUCCESS,\r\n    payload: newPosts\r\n  };\r\n};\r\n\r\nconst postsRequested = () => {\r\n  return {\r\n    type: type.FETCH_POSTS_REQUEST\r\n  };\r\n};\r\n\r\nconst postsError = (error) => {\r\n  return {\r\n    type: type.FETCH_POSTS_FAILURE,\r\n    payload: error\r\n  };\r\n};\r\n\r\nconst fetchPosts = ( postsStoreService, dispatch ) => () => {\r\n  dispatch(postsRequested());\r\n  postsStoreService.getPosts()\r\n  .then((data) => dispatch(postsLoaded(data)))\r\n  .catch((error) => dispatch(postsError(error)));\r\n}\r\n\r\nconst fetchAddPost = ( postsStoreService, dispatch ) => (data) => {\r\n  dispatch(postsRequested());\r\n  postsStoreService.postAddPost(data)\r\n  .then((data) => dispatch(postsLoaded(data)))\r\n  .catch((error) => dispatch(postsError(error)));\r\n}\r\n\r\nexport {\r\n  fetchPosts,\r\n  fetchAddPost,\r\n};","const FETCH_POSTS_SUCCESS = 'FETCH_POSTS_SUCCESS';\r\nconst FETCH_POSTS_REQUEST = 'FETCH_POSTS_REQUEST';\r\nconst FETCH_POSTS_FAILURE = 'FETCH_POSTS_FAILURE';\r\nconst POST_ADDED_TO_LIST = 'POST_ADDED_TO_LIST';\r\n\r\nexport {\r\n  FETCH_POSTS_REQUEST,\r\n  FETCH_POSTS_SUCCESS,\r\n  FETCH_POSTS_FAILURE,\r\n  POST_ADDED_TO_LIST,\r\n}","import ErrorIndicator from './error-indicator'\r\nexport default ErrorIndicator","import React from 'react'\r\n\r\nconst ErrorIndicator = () => {\r\n  return (\r\n    <div>\r\n      Error\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorIndicator;\r\n","import Spinner from './spinner';\r\nexport default Spinner;","import React from 'react'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div>\r\n      Loading ...\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner;\r\n","import ItemList from './item-list';\r\nexport default ItemList;","import React from 'react';\r\n\r\nimport './item-list.css'\r\n\r\nconst ItemList = ({ data, children: renderLabel }) => {\r\n  const items = data.map((item) => {\r\n    const label = renderLabel(item)\r\n    return (\r\n      <li className='col-6 col-md-4' key={item.id}>\r\n        {label}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ul className='item-list'>\r\n        {items}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemList;","import React from 'react'\r\nimport ItemList from '../item-list';\r\nimport { withChildRender } from '../hoc';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './post-card.css';\r\n\r\nconst renderPost = ({ id, title, author, date }) => {\r\n  return (\r\n    <article className=\"card post-card\">\r\n      <div className=\"card-body\">\r\n        <Link to={`/post/${id}`}>\r\n          <h5 className=\"card-title\">{title}</h5>\r\n        </Link>\r\n        <p className=\"card-text\">{author}</p>\r\n        <p className=\"card-text\">{date}</p>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\n\r\nconst PostList = withChildRender(renderPost)(ItemList);\r\n\r\nexport default PostList;\r\n","import PostListContainer from './post-list-container';\r\nexport default PostListContainer;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withPostsStoreService } from '../../components/hoc';\r\nimport { compose } from '../../utils';\r\nimport { fetchPosts } from '../../actions';\r\nimport ErrorIndicator from '../../components/error-indicator';\r\nimport Spinner from '../../components/spinner';\r\n\r\nimport PostList from '../../components/post-components/post-list';\r\n\r\nconst PostListContainer = ({ posts, loading, error, fetchPosts }) => {\r\n  useEffect(() => {  \r\n    fetchPosts()\r\n    return () => {\r\n      console.log('PostListContainer unmount')\r\n    };\r\n  }, [fetchPosts]);\r\n\r\n  return  loading ? <Spinner/>:\r\n          error ? <ErrorIndicator/>:\r\n          <PostList data={posts}/>;\r\n\r\n};\r\n\r\nconst mapStateToProps = ({ postList: { posts, loading, error }}) => ({ posts, loading, error });\r\n\r\nconst mapDispatchToProps = (dispatch, { postsStoreService }) => ({\r\n  fetchPosts: fetchPosts(postsStoreService, dispatch)\r\n});\r\n\r\nexport default compose(\r\n  withPostsStoreService(),\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(PostListContainer);\r\n","import PostItem from './post-item';\r\nexport default PostItem","import React from 'react'\r\n\r\nimport './post-item.css'\r\n\r\nconst PostItem = ({ post }) => {\r\n  const { title, author, content, date } = post;\r\n  document.title = title;\r\n\r\n  // {\r\n  //   заголовок записи внутри тега h1,\r\n  //   тег title тоже должен содержать заголовок записи,\r\n  //   контент записи,\r\n  //   имя автора,\r\n  //   дата записи,\r\n  // }\r\n  return (\r\n    <div className='container'>\r\n      <h1 className=\"card-title\">{title}</h1>\r\n      <div className='card' dangerouslySetInnerHTML={{__html: content.replace(/(<? *script)/gi, 'illegalscript')}}>\r\n      </div>\r\n      <p className=\"font-weight-normal\">{author}</p>\r\n      <p className=\"font-weight-light\">{date}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostItem;\r\n","import PostItemContainer from './post-item-container';\r\nexport default PostItemContainer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { compose } from '../../utils';\r\n\r\nimport PostItem from '../../components/post-item';\r\n\r\nconst PostItemContainer = ({id, posts}) => {\r\n  const post = posts.find(post => post.id == id)\r\n  return post ?  <PostItem post={post}/> : <h2>Not Found</h2>\r\n};\r\n\r\nconst mapStateToProps = ({ postList: { posts }}) => ({ posts });\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps)\r\n)(PostItemContainer);\r\n","import React from 'react';\r\nimport { PostListContainer } from '../../container';\r\n\r\nconst Main = () => {\r\n  document.title = 'Главная'\r\n  return <PostListContainer />\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react'\r\nimport { PostItemContainer } from '../../container';\r\n\r\nconst Post = ({ match }) => {\r\n  return (\r\n    <div>\r\n      <PostItemContainer id={match.params.id}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;\r\n","import PostForm from \"./post-form\";\nexport default PostForm","import React, {useState} from 'react';\nimport { connect } from 'react-redux';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport '../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport draftToHtml from 'draftjs-to-html';\n\nimport { fetchAddPost } from '../../actions';\nimport { compose } from 'redux';\nimport { withPostsStoreService } from '../hoc';\n\nimport './post-form.css'\n\nconst PostForm = ({ fetchAddPost }) => {\n  const nowDate = new Date().toDateString();\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [editor, setEditor] = useState(EditorState.createEmpty());\n  const [isAllert, setAllert] = useState(false);\n\n  const clearState = () => {\n    setTitle('');\n    setAuthor('');\n    setEditor(EditorState.createEmpty())\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    fetchAddPost({\n      title,\n      content: draftToHtml(convertToRaw(editor.getCurrentContent())),\n      author,\n      date: nowDate\n    });\n    setAllert(true)\n    clearState();\n  };\n\n  const onChange = e => {\n    let value = e.currentTarget.value\n    switch (e._targetInst.pendingProps.id) {\n      case 'title':\n        setTitle(value)\n        break;\n      case 'author':\n        setAuthor(value)\n        break;\n      default:\n        console.log('Error in \"switch case\"');\n        break;\n    };\n  };\n\n  const onClickAllert = () => {\n    setAllert(false);\n  };\n\n  const Allert = (\n    <div  onClick={onClickAllert} className=\"alert alert-success\" role=\"alert\">\n      <h4 className=\"alert-heading\">Успех!</h4>\n      <p>Пост отправлен</p>\n    </div>);\n\n  const onEditorStateChange = editorState => {\n    setEditor(editorState)\n  };\n\n  return (\n    <div className=\"container\">\n      {isAllert && Allert}\n      <form  onSubmit={onSubmit}>\n        <div className=\"form-group col-md-2\">\n          <label htmlFor=\"title\">Title</label>\n          <input value={title} onChange={onChange} type=\"text\" className=\"form-control-lg\" id=\"title\" placeholder=\"Title\" required/>\n        </div>\n\n        <div className=\"form-group col-md-12\">\n          <label htmlFor=\"content\">Content</label>\n          <Editor\n            editorState={editor}\n            wrapperClassName=\"editor-wrapper\"\n            editorClassName=\"editor-editor\"\n            onEditorStateChange={onEditorStateChange}\n          />\n        </div>\n\n        <div className=\"form-group col-md-2\">\n          <label htmlFor=\"author\">Author</label>\n          <input value={author} onChange={onChange} type=\"text\" className=\"form-control-lg\" id=\"author\" placeholder=\"author\" required/>\n        </div>\n\n        <div className=\"form-group col-md-2\">\n          <button type=\"submit\" className=\"btn btn-primary btn-lg\">Отправить</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\n\nconst mapDispatchToProps = (dispatch, { postsStoreService }) => () => {\n  return {\n    fetchAddPost: (post) => fetchAddPost(postsStoreService, dispatch)(post)\n  }\n};\n\nexport default compose(\n  withPostsStoreService(),\n  connect(null, mapDispatchToProps)\n)(PostForm);\n","import React from 'react'\r\nimport PostForm from '../post-form';\r\n\r\nconst AddPost = () => {\r\n  document.title = 'Добавить запись'\r\n  return (\r\n    <div>\r\n      <PostForm />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddPost;\r\n","import PostHeader from './post-header';\r\nexport default PostHeader;","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './post-header.css'; \r\n\r\nconst PostHeader = () => {\r\n  return (\r\n    <header className='post-header'>\r\n      <div className=\"container\">\r\n        <Link to='/' className='logo text-dark'>Main</Link>\r\n        <Link to='/add-post' className='add-post'>\r\n          <span>Add post</span> \r\n          <i className=\"cart-icon fa fa-plus-circle\" />\r\n        </Link>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default PostHeader;\r\n\r\n","import App from './app.js';\r\nexport default App;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport { AddPost, Post, Main } from '../pages';\r\nimport PostHeader from '../post-header';\r\n\r\nimport './app.css';\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <main role='main' className=\"container-fluid\">\r\n      <PostHeader />\r\n      <Switch>     \r\n        <Route path='/' component={Main} exact></Route>\r\n        <Route path='/add-post/' component={AddPost}></Route>\r\n        <Route path='/post/:id' component={Post}></Route>\r\n        \r\n        <Route render={() => <h2>Page not found</h2>} />\r\n      </Switch>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ErrorBoundry from './error-boundry'\r\nexport default ErrorBoundry","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n  state = {\r\n    hasError: false\r\n  }\r\n\r\n  componentDidCatch() {\r\n    this.setState({\r\n      hasError: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return this.state.hasError ? <ErrorIndicator/> : this.props.children\r\n  }\r\n}","class PostsStoreService {\r\n  data = [\r\n    {\r\n      title: 'Title №1',\r\n      author: 'Author №1',\r\n      content: '<p><span style=\"color: rgb(0,0,0);background-color: rgb(255,255,255);font-size: 14px;font-family: Arial;\"><strong>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nihil laboriosam rerum est omnis sunt nesciunt exercitationem voluptate cupiditate fugit numquam minima, consectetur maiores at et sed eligendi cumque facere voluptatum.</strong></span></p><p><span style=\"color: rgb(0,0,0);background-color: rgb(255,255,255);font-size: 14px;font-family: Arial;\"><em>          Sint enim minus placeat, autem consectetur inventore ipsum voluptate esse doloremque temporibus? Natus, beatae? Id saepe error quibusdam praesentium aperiam a magni expedita natus! Iste quidem at neque autem maiores.</em></span></p><p><span style=\"color: rgb(255,255,255);background-color: rgb(38,50,56);font-size: 14px;font-family: Arial;\"><del>          Quasi illum quo non dolorem ea harum voluptatem ipsa quaerat et, eveniet beatae sapiente fugit explicabo fuga nihil laborum vitae mollitia voluptatibus quam voluptates. Dolor necessitatibus facere deleniti esse tenetur?</del></span></p>',\r\n      date: 'Tue Jul 14 2020',\r\n      id: 249,\r\n    },\r\n    {\r\n      title: 'Title №2',\r\n      author: 'Author №2',\r\n      content: '<p>Lorem</p>',\r\n      date: 'Tue Jul 14 2020',\r\n      id: 248,\r\n    },\r\n    {\r\n      title: 'Title №3',\r\n      author: 'Author №3',\r\n      content: '<p>Lorem</p>',\r\n      date: 'Tue Jul 14 2020',\r\n      id: 247,\r\n    },\r\n    {\r\n      title: 'Title №4',\r\n      author: 'Author №4',\r\n      content: '<p></p>',\r\n      date: 'Tue Jul 14 2020',\r\n      id: 246,\r\n    },\r\n  ];\r\n\r\n  getPosts = () => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve(this.data);\r\n      }, 500);\r\n    });\r\n  };\r\n\r\n  postAddPost = (data) => {\r\n    const newData = {...data, id: Math.floor(Math.random()*1000)}\r\n    return new Promise((resolve) => {\r\n      this.data.push(newData)\r\n      setTimeout(() => {\r\n        resolve(this.data);\r\n      }, 500);\r\n    });\r\n  };\r\n\r\n  getPost (id) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve(this.data.find(item => item.id === id))\r\n      }, 500)\r\n    });\r\n  };\r\n\r\n};\r\n\r\nexport const postsStoreService = new PostsStoreService();","import {\r\n  FETCH_POSTS_SUCCESS,\r\n  FETCH_POSTS_REQUEST,\r\n  FETCH_POSTS_FAILURE,\r\n} from '../actions/const';\r\n\r\nconst updatePostlist = (state, action) => {\r\n  if (state === undefined) {\r\n    return {\r\n      posts: [],\r\n      loading: true,\r\n      error: null\r\n    };\r\n  };\r\n  switch (action.type) {\r\n    case FETCH_POSTS_SUCCESS:\r\n      return {\r\n        posts: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case FETCH_POSTS_REQUEST:\r\n      return {\r\n        posts: [],\r\n        error: null,\r\n        loading: true\r\n      };\r\n\r\n    case FETCH_POSTS_FAILURE:\r\n      return {\r\n        posts: [],\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n  \r\n    default:\r\n      return state.postList;\r\n  };\r\n};\r\n\r\nexport default updatePostlist;","import updatePostlist from './post-list';\r\n\r\nconst reducer = (state, action) => {\r\n  return {\r\n    postList: updatePostlist(state, action),\r\n    date: []\r\n  }\r\n};\r\n\r\nexport default reducer;","import { createStore } from \"redux\";\r\n\r\nimport reducer from './redusers';\r\n\r\nconst store = createStore(reducer)\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app';\nimport ErrorBoundry from './components/error-boundry';\nimport { PostsStoreProvider } from './posts-store-service-context';\nimport { postsStoreService } from './services/posts-store';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <PostsStoreProvider value={postsStoreService}>\n        <Router>\n          <App />\n        </Router>\n      </PostsStoreProvider>\n    </ErrorBoundry>\n  </Provider>,\n  document.getElementById('root')); "],"sourceRoot":""}